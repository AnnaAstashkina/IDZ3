.include "macrolib.asm"
.global parsing

# a0 - указатель на последний элемент буфера
# a1 - адрес буффера считанной строки; a3 - адрес считанной из файла строки в динамическую память
# t0 - 512 - максимальный размер; t2 - считанный символ строки; t1 - счетчик; t4 - \n 
# t5 - адрес буффера считанной строки; t6 - адрес считанной из файла строки в динамическую память
parsing:
    addi sp sp -4
    sw ra (sp)
    li t0, 512          # максимальный размер 512
    li t1, 1            # счетчик
    li t4, '\n'         
    mv t5, a1           # a1 - адрес буффера
    mv t6, a3           # a3 - адрес считанной строки в куче
    
while:
    bge t1, t0, readnext  # если t1 >= t0 т.е. лимита буффера
    lb t2, (t6)           # нынешний символ строки
    beq t2, t4, next      # если \n
    beq t2, zero, next    # если 0
    sb t2, (t5)           # сохраняем в новый буффер
    addi t5, t5, 1        # смещаем указатель буффера
    addi t6, t6, 1        # смещаем указатель кучи
    addi t1, t1, 1        # обнавляем счетчик
    j while              
    
readnext:
    lb t2, (t6)           
    beq t2, t4, next      # если \n
    beq t2, zero, next    # если 0
    addi t6, t6, 1        
    j readnext         

next:
    sb zero, (t5)        # заканчиваем текущий буффер нулем
    mv a0 t5
    addi a0 a0 -1        # указатель на последний элемент
    lw ra (sp)           # возвращаем ra
    addi sp sp 4
    ret                   
